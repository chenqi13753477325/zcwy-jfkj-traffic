<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dashboard.adp.dao.UserMapper">

    <select id="count" resultType="int">
        select count(1) from sys_user t
        <include refid="where" />
    </select>

    <select id="list" resultType="com.dashboard.adp.api.model.SysUser">
        select * from sys_user t
        <include refid="where" />
        order by  CAST("username" as INTEGER)
        limit  #{limit}  offset  #{offset}
    </select>

    <select id="usergetById" resultType="com.dashboard.adp.api.model.SysUser">
        select * from sys_user t where t.id = #{id}
    </select>

    <select id="userRolegetById" resultType="com.dashboard.adp.api.model.SysRoleUser">
        select * from sys_role_user t  where t."userId" = #{userId}
    </select>



    <update id="update">
        update sys_user t
        <set>
            <if test="username != null">
                "username" = #{username},
            </if>
            <if test="nickname != null">
                "nickname" = #{nickname},
            </if>
            <if test="headImgUrl != null">
                "headImgUrl" = #{headImgUrl},
            </if>
            <if test="phone != null">
                "phone" = #{phone},
            </if>
            <if test="telephone != null">
                "telephone" = #{telephone},
            </if>
            <if test="email != null">
                "email" = #{email},
            </if>
            <if test="birthday != null">
                "birthday" = #{birthday},
            </if>
            <if test="sex != null">
                "sex" = #{sex},
            </if>
            <if test="status != null">
                "status" = #{status},
            </if>
        </set>
        where t.id = #{id}
    </update>


    <insert id="saveUserRoles">
        insert into sys_role_user("roleId", "userId") values
        <foreach collection="roleIds" item="roleId" separator=",">
            (#{roleId}, #{userId})
        </foreach>
    </insert>

    <delete id="deleteUserRole">
        delete from sys_role_user where "userId" = #{userId}
    </delete>

    <select id="selectByPersonCode" parameterType="java.lang.String" resultType="com.dashboard.adp.api.model.SysUser">
        select * from sys_user
        where username = #{personCode,jdbcType=VARCHAR}
    </select>

    <sql id="where">
        <where>
            <if test="params.username != null and params.username != ''">
                and username like concat('%', #{params.username}, '%')
            </if>
            <if test="params.nickname != null and params.nickname != ''">
                and nickname like concat('%', #{params.nickname}, '%')
            </if>
            <!--<if test="params.username != null and params.username != ''">
                and t.username like concat('%', #{params.username}, '%')
            </if>
            <if test="params.nickname != null and params.nickname != ''">
                and t.nickname like concat('%', #{params.nickname}, '%')
            </if>
            <if test="params.status != null and params.status != ''">
                and t.status = #{params.status}
            </if>-->
        </where>
    </sql>

    <!--外部同步用户接口-->
    <insert id="externalsynuser" parameterType="java.util.HashMap">
    insert into sys_user (id,username,nickname,pernrcode, pernrname,sex,
      orgeh,orgname, planscode,plansname,stellcode,stellname,userstatus,
       usergroup,usertype,createtime)
    values (#{id,jdbcType=INTEGER},#{pernrcode,jdbcType=VARCHAR}, #{pernrname,jdbcType=VARCHAR},
      #{pernrcode,jdbcType=VARCHAR}, #{pernrname,jdbcType=VARCHAR},
       #{sex,jdbcType=INTEGER},#{orgeh,jdbcType=VARCHAR},
       #{orgname,jdbcType=VARCHAR}, #{planscode,jdbcType=VARCHAR},
       #{plansname,jdbcType=VARCHAR}, #{stellcode,jdbcType=VARCHAR},
       #{stellname,jdbcType=VARCHAR}, #{userstatus,jdbcType=INTEGER},
       #{usergroup,jdbcType=VARCHAR}, #{usertype,jdbcType=VARCHAR},
      #{createtime,jdbcType=TIMESTAMP})
    </insert>

    <select id="pernrcount" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT count(1) FROM sys_user
        where
        1=1
        <if test="pernrname != null">
          and pernrname=#{pernrname}
        </if>
        <if test="pernrcode != null">
          and pernrcode=#{pernrcode}
        </if>
    </select>

    <update id="externalSynUpdateUser" parameterType="java.util.HashMap">
        update sys_user
        <set>
            <if test="pernrname != null">
                "nickname" = #{pernrname},
                "pernrname" = #{pernrname},
            </if>
            <if test="sex != null">
                "sex" = #{sex},
            </if>
            <if test="orgeh != null">
                "orgeh" = #{orgeh},
            </if>
            <if test="orgname != null">
                "orgname" = #{orgname},
            </if>
            <if test="planscode != null">
                "planscode" = #{planscode},
            </if>
            <if test="plansname != null">
                "plansname" = #{plansname},
            </if>
            <if test="stellcode != null">
                "stellcode" = #{stellcode},
            </if>
            <if test="stellname != null">
                "stellname" = #{stellname},
            </if>
            <if test="userstatus != null">
                "userstatus" = #{userstatus},
            </if>
            <if test="usergroup != null">
                "usergroup" = #{usergroup},
            </if>
            <if test="usertype != null">
                "usertype" = #{usertype},
            </if>
            "updatetime" = #{updatetime,jdbcType=TIMESTAMP}
        </set>
        where pernrcode = #{pernrcode}
    </update>


    <select id="listDepartmentAll" resultType="com.dashboard.adp.api.model.AdpBaseServiceDepartment">
        select "service_department_code" AS serviceDepartmentCode,"service_department_name" AS serviceDepartmentName from adp_base_service_department
    </select>



    <delete id="deleteUserDepartment">
           delete from sys_user_pj_permission where "userId" = #{userId}
    </delete>

    <insert id="saveUserDepartment">
        insert into sys_user_pj_permission("pjPermissionId", "userId","pj_style") values (#{pjPermissionId}, #{userId},#{pjStyle})
    </insert>


    <select id="getDepartmentByUserId" resultType="com.dashboard.adp.api.model.AdpBaseServiceDepartment" >
        select d."service_department_code" AS serviceDepartmentCode from adp_base_service_department d inner join sys_user_pj_permission pj ON d."service_department_code" = pj."pjPermissionId"   where pj."userId"  = #{userId}
    </select>

    <select id="listPjAll" resultType="java.util.HashMap">
        select "contract_no" AS contractNo,"pj_name" AS pjName from adp_base_data
    </select>


    <select id="getPjByUserId" resultType="com.dashboard.adp.api.model.AdpBaseData" >
        SELECT
            d."contract_no" AS contractNo
        FROM
            adp_base_data d
        INNER JOIN sys_user_pj_permission pj ON d."contract_no" = pj."pjPermissionId"
        where pj."userId"  = #{userId}
    </select>


    <select id="getPjByUserIdPjStyle" resultType="com.dashboard.adp.api.model.AdpBaseData" >
        SELECT
            d."contract_no" AS contractNo
        FROM
            adp_base_data d
        INNER JOIN sys_user_pj_permission pj ON d."contract_no" = pj."pjPermissionId"
        where pj."userId"  = #{userId} and pj."pj_style" = #{pjStyle}
    </select>

    <!--事业部tree数据-->
    <select id="listDepartmentMap" resultType="java.util.HashMap">
        SELECT
            "service_department_code" AS id,
            "service_department_name" AS name,
            '0' AS pid
        FROM
            adp_base_service_department
    </select>

    <!--通过事业部名称获取项目tree数据-->
    <select id="listPjMap" resultType="java.util.HashMap">
        SELECT
        "contract_no" AS id,
        "pj_name" AS name,
        #{idStr} AS pid
        FROM
        adp_base_data
        where
        <choose>
            <when test="nameStr !=null and nameStr != ''">
                "department"  = #{nameStr}
            </when>
            <otherwise>
                "department"!='东北服务事业部'
                and "department"!='华北服务事业部'
                and "department"!='宁夏服务事业部'
                and "department"!='西北服务事业部'
                and "department"!='新疆服务事业部'
                and "department"!='华东服务事业部'
                and "department"!='西南服务事业部'
                and "department"!='华南服务事业部'
                and "department"!='海上服务事业部'
            </otherwise>
        </choose>

    </select>

    <select id="listPjMapByContractNoOrPjName" resultType="java.util.HashMap">
        SELECT
        "contract_no" AS id,
        "pj_name" AS name,
        '0' AS pid
        FROM
        adp_base_data
        where
           ( "contract_no" in (${idStr}) OR "pj_name" in (${idStr}) )
    </select>

    <select id="listPjMapByContractNoOrPjNameStr" resultType="java.util.HashMap">
        SELECT
        "contract_no" AS id,
        "pj_name" AS name,
        '0' AS pid
        FROM
        adp_base_data
        where
           ( "contract_no" like '%${idStr}%' OR "pj_name" like '%${idStr}%' )
    </select>

    <select id="getUserContractNo" resultType="String">
        select "service_department_code" as serviceDepartmentCode from  adp_base_service_department where  "service_department_name" in
        (SELECT
            "department" as department
        FROM
            adp_base_data
        where
            "contract_no"  = #{contractNo})
    </select>

    <update id="updateSysUser" parameterType="java.util.HashMap">
        update sys_user
        <set>
            <if test="loginIp != null">
                "loginIp" = #{loginIp},
            </if>
            "logintime" = #{userLoginTime,jdbcType=TIMESTAMP}
        </set>
        where userName = #{userName}
    </update>


    <!--事业部tree数据-->
    <select id="listCustomerMap" resultType="java.util.HashMap">
        SELECT
            "pj_customer" as  id,
            "pj_customer" AS name,
            '0' AS pid
        FROM
          adp_base_data
        WHERE "pj_customer" != ''
        GROUP BY "pj_customer"
    </select>


    <!--通过客户名称获取项目tree数据-->
    <select id="listPjMapByCustomer" resultType="java.util.HashMap">
        SELECT
            "contract_no" AS id,
            "pj_name" AS name,
            #{idStr} AS pid
        FROM
            adp_base_data
        where
            "pj_customer"  = #{nameStr}
    </select>


    <select id="getUserCustomerNo" resultType="String">
        SELECT
            "pj_customer" as pjCustomer
        FROM
            adp_base_data
        where
            "contract_no"  = #{contractNo}
    </select>

</mapper>