<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dashboard.adp.dao.RoleMapper">

    <select id="getRoleByUI" resultType="java.lang.String" parameterType="java.lang.String">
        select name from table_role where id in (select rid from t_user_role where uid = #{uid} )
    </select>

    <select id="getRoles" resultType="java.util.HashMap" parameterType="java.lang.String">
      select * from table_role where id in (select rid from t_user_role where uid = #{uid} )
    </select>


    <select id="count" resultType="int">
        select count(1) from sys_role
        <include refid="where" />
    </select>

    <select id="list" resultType="com.dashboard.adp.api.model.SysRole">
        select * from sys_role
        <include refid="where" />
        order by  "id"
        limit  #{limit}  offset  #{offset}
    </select>

    <select id="roleAll" resultType="com.dashboard.adp.api.model.SysRole">
        select * from sys_role order by id
    </select>


    <insert id="save" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into sys_role("name", "description", "createTime", "updateTime","level") values(#{name}, #{description}, now(),now(),#{level})
    </insert>

    <insert id="saveRolePermission">
        insert into sys_role_permission("roleId", "permissionId") values
        <foreach collection="permissionIds" item="permissionId"
                 separator=",">
            (#{roleId}, #{permissionId})
        </foreach>
    </insert>

    <select id="getRoleIdByUserIds" resultType="java.lang.Integer" parameterType="java.lang.String">
        select "roleId" FROM sys_role_user WHERE "userId" IN (select id FROM sys_user WHERE username = #{userName})
    </select>



    <sql id="where">
        <where>
            1=1
            <if test="params.name != null and params.name != ''">
                and name like concat('%', #{params.name}, '%')
            </if>
            <!--<if test="params.username != null and params.username != ''">
                and t.username like concat('%', #{params.username}, '%')
            </if>
            <if test="params.nickname != null and params.nickname != ''">
                and t.nickname like concat('%', #{params.nickname}, '%')
            </if>
            <if test="params.status != null and params.status != ''">
                and t.status = #{params.status}
            </if>-->
        </where>
    </sql>

</mapper>